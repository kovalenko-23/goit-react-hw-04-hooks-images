{"version":3,"sources":["App.styled.jsx","Components/Modal/Modal.styled.jsx","Components/Modal/Modal.jsx","Components/Searchbar/Searchbar.styled.jsx","Components/Searchbar/Searchbar.jsx","Services/api.jsx","Components/GalleryItem/GalleryItem.styled.jsx","Components/GalleryItem/GelleryItem.jsx","Components/ImageGallary/ImageGallary.styled.jsx","Components/ImageGallary/ImageGallary.jsx","Components/Button/Button.styled.jsx","Components/Button/Button.jsx","Components/Loader/Loader.styled.jsx","Components/Loader/Loader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Overlay","Modal","modalRoot","document","querySelector","ModalWindow","image","handleModal","state","handleKeyDown","useCallback","e","code","useEffect","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","src","alt","Header","header","Bar","form","BtnSubmit","button","InptField","input","Searchbar","onSubmit","preventDefault","elements","searchInput","value","type","name","autoComplete","autoFocus","placeholder","axios","defaults","baseURL","fetchGallery","inputSearch","page","a","get","responce","data","GalleryItem","li","GalleryItemImg","img","GalleryIltem","webformatURL","largeImage","GalleryList","ul","Gallery","images","onImageClick","map","largeImageURL","id","LoadMore","LoadMoreBtn","Spinner","color","height","width","scrollTo","top","documentElement","scrollHeight","behavior","Status","App","useState","setImages","setSearchInput","setPage","requestStatus","setRequestStatus","showModal","setShowModal","setLargeImage","prevSearch","useRef","prevPage","current","then","hits","totalImages","total","totalhits","length","toast","icon","fill","success","catch","error","console","log","message","prev","largePicture","shouldShowButton","showSpinner","trim","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uQAEaA,EAAUC,IAAOC,IAAV,yHCAPC,EAAUF,IAAOC,IAAV,2OAYPE,EAAQH,IAAOC,IAAV,iG,OCTZG,EAAYC,SAASC,cAAc,eA2C1BC,I,QAAAA,EAzCf,YAAqD,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,MACnCC,EAAgBC,uBACpB,SAACC,GACgB,WAAXA,EAAEC,OAA+B,IAAVJ,GACzBD,MAGJ,CAACA,EAAaC,IAmBhB,OAhBAK,qBAAU,YACM,IAAVL,GACFM,OAAOC,iBAAiB,UAAWN,IAGvB,IAAVD,GACFM,OAAOE,oBAAoB,UAAWP,KAEvC,CAACA,EAAeD,IAQZS,uBACL,cAACjB,EAAD,CAASkB,QAPiB,SAACP,GACvBA,EAAEQ,gBAAkBR,EAAES,QACxBb,KAKF,SACE,cAACN,EAAD,UACE,qBAAKoB,IAAKf,EAAOgB,IAAI,SAGzBpB,ICrCSqB,EAASzB,IAAO0B,OAAV,qcAmBNC,EAAM3B,IAAO4B,KAAV,kLAUHC,EAAY7B,IAAO8B,OAAV,qmBA6BTC,EAAY/B,IAAOgC,MAAV,uPCzDTC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAExB,OACI,cAACT,EAAD,UACI,eAACE,EAAD,CAAKO,SAAU,SAAArB,GACXA,EAAEsB,iBACFD,EAASrB,EAAES,OAAOc,SAASC,YAAYC,QAF3C,UAKA,cAACT,EAAD,CAAWU,KAAK,WAGhB,cAACR,EAAD,CACIS,KAAK,cACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,mC,0CChB5BC,IAAMC,SAASC,QAAU,2BACzB,I,UAGaC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAC,EAAA,sEACDN,IAAMO,IAAN,aAAgBH,EAAhB,iBAAoCC,GAApC,OAJf,2CAIe,OAHX,yDAEY,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,wDCNZC,EAActD,IAAOuD,GAAV,qLAMXC,EAAiBxD,IAAOyD,IAAV,oNCJdC,EAAe,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,aAAcnB,EAAgC,EAAhCA,KAAMoB,EAA0B,EAA1BA,WAAYxC,EAAc,EAAdA,QAC3D,OACI,cAACkC,EAAD,CAAalC,QAAS,kBAAMA,EAAQwC,IAApC,SACI,cAACJ,EAAD,CAAgBjC,IAAKoC,EAAcnC,IAAKgB,OCLvCqB,EAAc7D,IAAO8D,GAAV,4RCEXC,EAAU,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAC9B,OACI,cAACJ,EAAD,UACKG,EAAOE,KAAI,SAAA1D,GAAK,OACb,cAAC,EAAD,CAAcY,QAAS6C,EAEnBN,aAAcnD,EAAMmD,aACpBnB,KAAMhC,EAAMgC,KACZoB,WAAYpD,EAAM2D,eAHb3D,EAAM4D,UCPlBC,EAAWrE,IAAO8B,OAAV,wpBCCRwC,EAAc,SAAC,GAAiB,IAAflD,EAAc,EAAdA,QAC1B,OACI,cAACiD,EAAD,CACI9B,KAAK,SACLnB,QAAS,SAACP,GAAD,OAAOO,EAAQP,IAF5B,wB,yBCHKd,EAAUC,IAAOC,IAAV,qECEPsE,EAAU,WACnB,OACI,cAAC,EAAD,UACI,cAAC,IAAD,CAAQhC,KAAK,YAAYiC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,Q,QCIxE1D,OAAO2D,SAAS,CACdC,IAAKvE,SAASwE,gBAAgBC,aAC9BC,SAAU,WAGZ,IAAMC,EACE,OADFA,GAEK,UAFLA,GAGM,WAHNA,GAIM,WAoHGC,OAjHf,WACE,MAA4BC,mBAAS,IAArC,mBAAOlB,EAAP,KAAemB,EAAf,KACA,EAAsCD,mBAAS,MAA/C,mBAAO7C,EAAP,KAAoB+C,EAApB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOjC,EAAP,KAAaoC,EAAb,KACA,EAA0CH,mBAASF,GAAnD,mBAAOM,EAAP,KAAsBC,EAAtB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAAoCP,mBAAS,MAA7C,mBAAOtB,EAAP,KAAmB8B,EAAnB,KAEMC,EAAaC,iBAAO,MACpBC,EAAWD,iBAAO,GAExB7E,qBAAU,WACHsB,GAIDsD,EAAWG,UAAYzD,IACzBkD,EAAiBP,IACjBG,EAAU,IACVE,EAAQ,GACRtC,EAAaV,EAAawD,EAASC,SAChCC,MAAK,SAAC/B,GACLmB,EAAUnB,EAAOgC,MACjB,IAAMC,EAAcjC,EAAOkC,MACrBC,EAAYnC,EAAOgC,KAAKI,OAE9B,GAAkB,IAAdD,EAKF,OAJAZ,EAAiBP,SACjBqB,YAAM,iCAAD,OAAkChE,EAAlC,KAAkD,CACrDiE,KAAM,cAAC,IAAD,CAASC,KAAM,aAKzBF,IAAMG,QAAN,yBAAgCP,EAAhC,YAGEV,EADEY,EAAY,GACGnB,GAEAA,OAGpByB,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAMG,eAGvB,CAACxE,IAEJtB,qBAAU,WACJ8E,EAASC,UAAY7C,IACvBsC,EAAiBP,IACjBjC,EAAaV,EAAaY,GACvB8C,MAAK,SAAC/B,GACLmB,GAAU,SAAC2B,GAAD,4BAAcA,GAAd,YAAuB9C,EAAOgC,UACxC,IAAMG,EAAYnC,EAAOgC,KAAKI,OAG5Bb,EADEY,EAAY,GACGnB,GAEAA,OAGpByB,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAMG,eAGvB,CAACxE,EAAaY,IAEjB,IAiBMxC,EAAc,SAACsG,GACfnD,IAAemD,GACjBrB,EAAcqB,GAEhBtB,GAAcD,IAGVwB,EAAmB1B,IAAkBN,GACrCiC,EAAc3B,IAAkBN,GAEtC,OACE,eAACjF,EAAD,WACE,cAAC,IAAD,IACA,cAAC,EAAD,CAAWmC,SA9BW,SAACI,GACrBA,IAAUD,IAGS,KAAnBC,EAAM4E,KAAK,IACbb,IAAMK,MAAM,8BAEZtB,EAAe9C,GACf+C,EAAQ,QAuBR,cAAC,EAAD,CAASpB,aAAcxD,EAAauD,OAAQA,IAC3CgD,GAAoB,cAAC,EAAD,CAAa5F,QApBf,SAACP,GACtBA,EAAEsB,iBACFkD,GAAQ,SAACyB,GAAD,OAAUA,EAAO,QAmBtBG,GAAe,cAAC,EAAD,IACfzB,GACC,cAAC,EAAD,CACEhF,MAAOoD,EACPnD,YAAaA,EACbC,MAAO8E,QCrHF2B,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFxH,SAASyH,eAAe,SAM1BX,O","file":"static/js/main.2a69c3ef.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`","import styled from '@emotion/styled'\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`\r\nexport const Modal = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`\r\n\r\n","import { Overlay, Modal } from \"./Modal.styled\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nfunction ModalWindow({ image, handleModal, state }) {\r\n  const handleKeyDown = useCallback(\r\n    (e) => {\r\n      if (e.code === \"Escape\" && state === true) {\r\n        handleModal();\r\n      }\r\n    },\r\n    [handleModal, state]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (state === true) {\r\n      window.addEventListener(\"keydown\", handleKeyDown);\r\n    }\r\n\r\n    if (state === false) {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    }\r\n  }, [handleKeyDown, state]);\r\n\r\n  const handleBackDropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      handleModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <Overlay onClick={handleBackDropClick}>\r\n      <Modal>\r\n        <img src={image} alt=\"\" />\r\n      </Modal>\r\n    </Overlay>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModalWindow.propTypes = {\r\n  state: PropTypes.bool.isRequired,\r\n  handleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalWindow;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nexport const Bar = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const BtnSubmit = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n  opacity: 1;\r\n  &label {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n}\r\n}\r\n`\r\n\r\nexport const InptField = styled.input`\r\ndisplay: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n  font: inherit;\r\n  font-size: 18px;\r\n}\r\n`\r\n","import PropTypes from 'prop-types';\r\nimport { Header, Bar, BtnSubmit, InptField } from './Searchbar.styled';\r\n\r\nexport const Searchbar = ({ onSubmit }) => {\r\n\r\n    return (\r\n        <Header>\r\n            <Bar onSubmit={e => {\r\n                e.preventDefault();\r\n                onSubmit(e.target.elements.searchInput.value);\r\n            }}>\r\n\r\n            <BtnSubmit type=\"submit\">\r\n            </BtnSubmit>\r\n\r\n            <InptField\r\n                name=\"searchInput\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                placeholder=\"Search images and photos\"\r\n            />\r\n            </Bar>\r\n        </Header>\r\n    )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import axios from \"axios\";\r\n\r\n// https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst key = '&key=22617397-addb084a927a6e55ecd24a84b';\r\nconst REQUEST = '&image_type=photo&orientation=horizontal&per_page=12';\r\n\r\nexport const fetchGallery = async (inputSearch, page) => {\r\n    const responce = await axios.get(`?q=${inputSearch}&page=${page}${key}${REQUEST}`)\r\n    return responce.data\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const GalleryItem = styled.li`\r\n border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nexport const GalleryItemImg = styled.img`\r\n width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover{\r\n      transform: scale(1.03);\r\n  cursor: zoom-in;\r\n  }\r\n`","import PropTypes from 'prop-types'\r\n\r\nimport { GalleryItem, GalleryItemImg } from \"./GalleryItem.styled\"\r\n\r\nexport const GalleryIltem = ({ webformatURL, name, largeImage, onClick }) => {\r\n    return (\r\n        <GalleryItem onClick={() => onClick(largeImage)}>\r\n            <GalleryItemImg src={webformatURL} alt={name} />\r\n        </GalleryItem>\r\n    )\r\n}\r\n\r\nGalleryIltem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    name: PropTypes.string,\r\n    largeImage: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,  \r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const GalleryList = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`","import PropTypes from 'prop-types'\r\nimport { GalleryIltem } from \"../GalleryItem/GelleryItem\"\r\nimport { GalleryList } from \"./ImageGallary.styled\"\r\n\r\nexport const Gallery = ({ images, onImageClick }) => {\r\n    return (\r\n        <GalleryList>\r\n            {images.map(image => (\r\n                <GalleryIltem onClick={onImageClick}\r\n                    key={image.id}\r\n                    webformatURL={image.webformatURL}\r\n                    name={image.name}\r\n                    largeImage={image.largeImageURL}\r\n                />\r\n            ))}\r\n        </GalleryList>\r\n    )\r\n}\r\n\r\nGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        webformatURL: PropTypes.string.isRequired,\r\n        name: PropTypes.string,\r\n    })),\r\n    largeImageURL: PropTypes.string,\r\n    onImageClick: PropTypes.func.isRequired,\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LoadMore = styled.button`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100px;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n    &:focus, :hover {\r\n  background-color: #303f9f;\r\n}\r\n`","import PropTypes from 'prop-types'\r\nimport { LoadMore } from './Button.styled'\r\n\r\nexport const LoadMoreBtn = ({ onClick }) => {\r\n    return (\r\n        <LoadMore\r\n            type=\"submit\"\r\n            onClick={(e) => onClick(e)}>\r\n            Load More\r\n        </LoadMore>\r\n    )\r\n}\r\n\r\nLoadMoreBtn.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\nmargin-right: auto;\r\nmargin-left: auto;\r\n`","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Wrapper } from \"./Loader.styled\";\r\n\r\nexport const Spinner = () => {\r\n    return(\r\n        <Wrapper>\r\n            <Loader type=\"ThreeDots\" color=\"#6e89ec\" height={80} width={80} />\r\n        </Wrapper>\r\n    )\r\n}","import { useState, useEffect, useRef } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { Wrapper } from \"./App.styled\";\nimport ModalWindow from \"./Components/Modal/Modal\";\nimport { Searchbar } from \"./Components/Searchbar/Searchbar\";\nimport { fetchGallery } from \"./Services/api\";\nimport { Gallery } from \"./Components/ImageGallary/ImageGallary\";\nimport { LoadMoreBtn } from \"./Components/Button/Button\";\nimport { Spinner } from \"./Components/Loader/Loader\";\nimport { FaFrown } from \"react-icons/fa\";\n\nwindow.scrollTo({\n  top: document.documentElement.scrollHeight,\n  behavior: \"smooth\",\n});\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [searchInput, setSearchInput] = useState(null);\n  const [page, setPage] = useState(1);\n  const [requestStatus, setRequestStatus] = useState(Status.IDLE);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImage, setLargeImage] = useState(null);\n\n  const prevSearch = useRef(null);\n  const prevPage = useRef(1);\n\n  useEffect(() => {\n    if (!searchInput) {\n      return;\n    }\n\n    if (prevSearch.current !== searchInput) {\n      setRequestStatus(Status.PENDING);\n      setImages([]);\n      setPage(1);\n      fetchGallery(searchInput, prevPage.current)\n        .then((images) => {\n          setImages(images.hits);\n          const totalImages = images.total;\n          const totalhits = images.hits.length;\n\n          if (totalhits === 0) {\n            setRequestStatus(Status.REJECTED);\n            toast(`Sorry, nothing have found by \"${searchInput}\"`, {\n              icon: <FaFrown fill={\"orange\"} />,\n            });\n            return;\n          }\n\n          toast.success(`You have found ${totalImages} images`);\n\n          if (totalhits < 12) {\n            setRequestStatus(Status.REJECTED);\n          } else {\n            setRequestStatus(Status.RESOLVED);\n          }\n        })\n        .catch((error) => {\n          console.log(error.message);\n        });\n    }\n  }, [searchInput]);\n\n  useEffect(() => {\n    if (prevPage.current !== page) {\n      setRequestStatus(Status.PENDING);\n      fetchGallery(searchInput, page)\n        .then((images) => {\n          setImages((prev) => [...prev, ...images.hits]);\n          const totalhits = images.hits.length;\n\n          if (totalhits < 12) {\n            setRequestStatus(Status.REJECTED);\n          } else {\n            setRequestStatus(Status.RESOLVED);\n          }\n        })\n        .catch((error) => {\n          console.log(error.message);\n        });\n    }\n  }, [searchInput, page]);\n\n  const handleSearchInput = (value) => {\n    if (value === searchInput) {\n      return;\n    }\n    if (value.trim(\"\") === \"\") {\n      toast.error(\"Please, enter your querry\");\n    } else {\n      setSearchInput(value);\n      setPage(1);\n    }\n  };\n\n  const handleLoadMore = (e) => {\n    e.preventDefault();\n    setPage((prev) => prev + 1);\n  };\n\n  const handleModal = (largePicture) => {\n    if (largeImage !== largePicture) {\n      setLargeImage(largePicture);\n    }\n    setShowModal(!showModal);\n  };\n\n  const shouldShowButton = requestStatus === Status.RESOLVED;\n  const showSpinner = requestStatus === Status.PENDING;\n\n  return (\n    <Wrapper>\n      <Toaster />\n      <Searchbar onSubmit={handleSearchInput} />\n      <Gallery onImageClick={handleModal} images={images} />\n      {shouldShowButton && <LoadMoreBtn onClick={handleLoadMore} />}\n      {showSpinner && <Spinner />}\n      {showModal && (\n        <ModalWindow\n          image={largeImage}\n          handleModal={handleModal}\n          state={showModal}\n        />\n      )}\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}